import streamlit as st
from subscriber import Subscriber
from streamlit_autorefresh import st_autorefresh
import socket
import json

# Fun√ß√£o auxiliar para publica√ß√£o
def publicar_mensagem(topico: str, mensagem: str, host="localhost", porta=6666):
    try:
        pacote = {
            "type": "publish",
            "topico": topico,
            "mensagem": mensagem
        }

        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((host, porta))
        s.sendall(json.dumps(pacote).encode("utf-8"))
        s.close()

        return f"Mensagem publicada no t√≥pico: {topico}"
    except Exception as e:
        return f"Erro ao publicar mensagem: {e}"

# Evita recriar o objeto em cada execu√ß√£o
if 'sub' not in st.session_state:
    st.session_state.sub = Subscriber()
sub = st.session_state.sub

st.title("üì• Assinante de T√≥picos (Subscriber)")

# Bot√£o para listar os t√≥picos
if st.button("üîç Listar T√≥picos Dispon√≠veis"):
    topicos = sub.ListaTopicos()
    if topicos:
        st.session_state.topicos_disponiveis = topicos
    else:
        st.warning("Nenhum t√≥pico dispon√≠vel no momento.")

# Selectbox com t√≥picos dispon√≠veis
topico_escolhido = st.selectbox(
    "Selecione um t√≥pico existente:",
    st.session_state.get('topicos_disponiveis', []),
    key="topico_select"
)

# Campo de mensagem
mensagem = st.text_area("Insira a mensagem para publica√ß√£o:")

# Bot√£o de publica√ß√£o
if st.button("üì§ Publicar Mensagem"):
    if not topico_escolhido or not mensagem.strip():
        st.warning("‚ö†Ô∏è Por favor, preencha o t√≥pico e a mensagem.")
    else:
        resultado = publicar_mensagem(topico_escolhido, mensagem)
        st.success(resultado)

# Bot√£o de inscri√ß√£o
if st.button("‚úÖ Inscrever-se"):
    if topico_escolhido:
        sub.subscribe(topico_escolhido)
        st.success(f"Inscrito no t√≥pico: {topico_escolhido}")
    else:
        st.error("Informe um t√≥pico v√°lido.")

# Auto-refresh a cada 1 segundo
st_autorefresh(interval=1000, key="auto_refresh")

# Mensagens recebidas
st.subheader("üì® Mensagens Recebidas:")
if hasattr(sub, 'mensagens') and sub.mensagens:
    for msg in sub.mensagens[::-1]:
        st.write(msg)
else:
    st.info("Nenhuma mensagem recebida ainda.")
